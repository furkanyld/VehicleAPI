// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleAPI.VehicleDb;

#nullable disable

namespace VehicleAPI.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20240802093003_mg_1")]
    partial class mg_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleAPI.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator().HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VehicleAPI.Models.Boat", b =>
                {
                    b.HasBaseType("VehicleAPI.Models.Vehicle");

                    b.HasDiscriminator().HasValue("Boat");
                });

            modelBuilder.Entity("VehicleAPI.Models.Bus", b =>
                {
                    b.HasBaseType("VehicleAPI.Models.Vehicle");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("VehicleAPI.Models.Car", b =>
                {
                    b.HasBaseType("VehicleAPI.Models.Vehicle");

                    b.Property<bool>("headlightsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
